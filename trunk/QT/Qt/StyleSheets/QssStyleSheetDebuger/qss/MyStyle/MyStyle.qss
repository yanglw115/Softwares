
/*###########################################################################
 * 设计总结: 
 * 1.每个控件最好都设置hover时的边框或背景色,便于提示用户焦点所落的位置; 可以直接设置基类; 
 * 2.对于按钮需要设置pressed时的边框或背景色,便于提示用户按钮按下; 
 * 3.可以借助KineticWing IDE辅助工具;
 * 4.更多细节请参考Qt Style sheet reference
 */
 
 

/* BoxModel的概念:
 * 每个Widget被当作一个由4个同轴的矩形组成的盒子. Margin-Border-padding-content
 * Margin: 边距,与其他widget的边距; 
 * Border: 边界; 
 * Padding: 相当于内边距,与内部内容的距离,即Border与Content的距离;
 * Content: 内部内容; 
 * 默认以上四个矩形的大小是相同的,即margin,border-width和padding属性值默认为0; 
 *
 * background-image,border-image和image
 * background-image默认只展示在border内部,但是可以通过background-clip进行改变;另外还可以通过background-repeat和background控制图像repeat及原点;
 * border-image可以使图像根据widget的大小改变而改变,但是background-image却做不到.二者同时出现时,background-image将被border-image覆盖;
 * image位于boder-image的上层,image一般也不能够根据widget的大小进行拉伸,但是image却可以指定使用svg格式的图像以便根据widget大小而进行拉伸.同时image属性只能用于sub controls;
 */
 
 
/**--------------相关的属性类型-----------------/
/* border style
 * 在设置border的时候,可以分别设置border-width,border-style,border-color;也可以直接设置border属性同时设置三者,但是需要按照width/style/color的顺序来
 * border: 1px solid red == border-width: 1px; border-style: solid; border-color: red;
 * 其中border-style可选为: dashed | dot-dash | dot-dot-dash | dotted | double | groove | inset | outset | ridge| solid | none
 */
 
/* Alignment
 * 位置或对齐方式,可选为:top | bottom | left | right | center
 */
  
/* Attachment: 依附方式,可选为scroll | fixed */

/* border-image: none | Url Number{4} (stretch | repeat){0,2} */


/*-----------------------------------------------------------------
 * QWidget: 设置之后其所有子类都将改变
 */
QWidget {
    background-color: qlineargradient(x1: 0, y1:0, x2: 0, y2: 1,
                                stop: 0 #AA9BD6, stop: 1 #44467F);
    color: #FFEC8B;
    border: 1px solid;
}
QWidget:hover {
    border-color: white;
}



/*-----------------------------------------------------------------
 * QMainWindow
 *
 */
QMainWindow::separator {/* dockwidget分割线 */
    background: black;
    width: 2px; /* when vertical */
    height: 2px; /* when horizontal */
}

QMainWindow::separator:hover {
    background: white;
}
 
 

/*-----------------------------------------------------------------
 * QAbstractScrollArea: 所有他的子类都可以设置他的背景属性，但是一般直接设置其子类
 * QAbstractScrollArea支持BoxModel*/
QAbstractScrollArea {
    /*background-color: #000000;*/
    /*background-image: url();*/
    /*border-image: url(":/qss/pure-black.jpg");*/
    /*background-attachment: scroll;*/ /* scroll: 背景图会滚动; fixed: 背景图固定 */
}


/*-----------------------------------------------------------------
 * QCheckBox: 支持BoxModel
 * 支持::indicator subcontrol及spacing等额外功能
 */
QCheckBox {
    spacing: 5px;/* subcontrol与content之间的距离 */
}

QCheckBox::indicator {
    width: 20px;
    height: 20px;
}

QCheckBox::indicator:unchecked {
    /* border-image其图片可以随widget大小而进行拉伸 */
    border-image: url(:/qss/checkbox_unchecked.png);
}

QCheckBox::indicator:unchecked:hover {
    /* 这里的image如果不是svg格式,则其最大由图片的尺寸决定,不会随着widget大小而变化 */
    /*image: url(:/qss/checkbox_unchecked_hover.png);*/
    border-image: url(:/qss/checkbox_unchecked_hover.png);
}

QCheckBox::indicator:unchecked:pressed {
    border-image: url(:/qss/checkbox_unchecked_pressed.png);
}

QCheckBox::indicator:checked {
    border-image: url(:/qss/checkbox_checked.png);
}

QCheckBox::indicator:checked:hover {
    border-image: url(:/qss/checkbox_checked_hover.png);
}

QCheckBox::indicator:checked:pressed {
    border-image: url(:/qss/checkbox_checked_pressed.png);
}

QCheckBox::indicator:indeterminate:hover {
    /*image: url(:/images/checkbox_indeterminate_hover.png);*/
}

QCheckBox::indicator:indeterminate:pressed {
    /*image: url(:/images/checkbox_indeterminate_pressed.png);*/
}


/*-----------------------------------------------------------------
 * QColumnView
 * grip可以通过image属性进行样式设置; 指示箭头可以通过::left-arrow和::right-arrow进行样式设置
 * QColumnView的相关样式设置好像不生效,不知道是否用错了?
 */
QColumnView {
    /*image-grips: url(:/qss/pure-black.jpg);*/
}

QColumnView::right-arrow {
    width: 30px;
    height: 30px;
    background-color: #ff00ee;
}


/*-----------------------------------------------------------------
 * QComboBox
 */
QFontComboBox, QComboBox {
    border: 1px solid white;
    border-radius: 3px;
    padding: 1px 18px 1px 3px;
    min-width: 6em;
}

QFontComboBox, QComboBox:editable {
    background-color: qlineargradient(x1: 0, y1:0, x2: 0, y2: 1,
                                stop: 0 #AA9BD6, stop: 1 #44467F);
}

/* QComboBox处于不可编辑状态(不能输入), 或下拉处于可编辑状态 */
/*QComboBox:!editable, QComboBox::drop-down:editable {
    background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                stop: 0 #E1E1E1, stop: 0.4 #DDDDDD,
                                stop: 0.5 #D8D8D8, stop: 1.0 #D3D3D3);
}*/

/* QComboBox gets the "on" state when the popup is open */
QComboBox:!editable:on, QComboBox::drop-down:editable:on {
    background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                stop: 0 #8470FF, stop: 0.4 #7B68EE,
                                stop: 0.5 #6A5ACD, stop: 1.0 #483D8B);
    color: #FFD700
}

/* 打开popup的时候,非下拉列表内容移动 */
QComboBox:on {
    padding-top: 3px;
    padding-left: 3px;
}

/* 下拉按钮相关样式 */
QComboBox::drop-down {
    /* 下拉按钮呈现的空间位置,如果是border的话与content的分割线将整个combobox切开 */
    subcontrol-origin: padding;
    /* 下拉按钮呈现的相对位置, 可以在任意四个位置 */
    subcontrol-position: top right;
    width: 15px;
    
    /* 默认border矩形的四个边宽度是0,即没有border */
    border-left-width: 1px;
    border-left-color: darkgray;
    border-left-style: solid; /* just a single line */
    /* 一般下拉按钮在右边, 所以border右边宽度为0, 这里设置下面丙个参数没有意义 */
    border-top-right-radius: 3px; /* same radius as the QComboBox */
    border-bottom-right-radius: 3px;
}

QComboBox::down-arrow {
    /* 下拉按钮箭头的形状, 这里使用image与border-image的效果是不一样的 */
    image: url(:/qss/combobox_down_arrow.png);
}

QComboBox::down-arrow:on { /* shift the arrow when popup is open */
    /* 下拉按钮箭头下拉时其相对位置的移动 */
    top: 1px;
    left: 1px;
}



/*-----------------------------------------------------------------
 * QDateEdit与QSpinBox按钮与箭头相关设置
 * 他们都满足box model
 */
QSpinBox, QDoubleSpinBox, QDateTimeEdit {
    padding-right: 15px; /* make room for the arrows */
    /*border-image: url(:/qss/pure-black.jpg) 1;*/
    border: 1px solid ;
    height: 20px;
}

QSpinBox::up-button {
    subcontrol-origin: padding;
    subcontrol-position: top right; /* position at the top right corner */
    
    width: 16px; /* 16 + 2*1px border-width = 15px padding + 3px parent border */
    height: 10px; /* 这里的高度需要结合总高度进行设置 */
    /* 如果指定了border-image,则border-top这些就不生效了,都是用来绘制边界的 */
    border-image: url(:/qss/spinup.png) 4; /* 这里的4也代表大小 */
    border-width: 1px;
/*    border-top: 1px solid;
    border-left: 1px solid;
    border-right: 1px solid;
    border-bottom: 1px solid;*/
}

QSpinBox::up-button:hover {
    border-image: url(:/qss/spinup_hover.png) 2;
}

QSpinBox::up-button:pressed {
    border-image: url(:/qss/spinup_pressed.png) 2;
}

QSpinBox::up-arrow {
    /* 由于up-button里面已经带了arrow,所以不再设置arrow */
    /*image: url(:/images/up_arrow.png);*/
    width: 7px;
    height: 7px;
}

QSpinBox::up-arrow:disabled, QSpinBox::up-arrow:off { /* off state when value is max */
    /*image: url(:/images/up_arrow_disabled.png);*/
}

QSpinBox::down-button {
    subcontrol-origin: padding;
    subcontrol-position: bottom right; /* position at bottom right corner */
    
    width: 16px;
    height: 10px;
    border-image: url(:/qss/spindown.png) 4;
    border-width: 1px;
    /*border-top-width: 0;*/
}

QSpinBox::down-button:hover {
    border-image: url(:/qss/spindown_hover.png) 2;
}

QSpinBox::down-button:pressed {
    border-image: url(:/qss/spindown_pressed.png) 2;
}

QSpinBox::down-arrow {
    /*image: url(:/images/down_arrow.png);*/
    width: 7px;
    height: 7px;
}

QSpinBox::down-arrow:disabled,
QSpinBox::down-arrow:off { /* off state when value in min */
    /*image: url(:/images/down_arrow_disabled.png);*/
}



/*-----------------------------------------------------------------
 * QDialog: 仅支持background,background-clip和background-origin几个属性的设置
 */
 
 
 
/*-----------------------------------------------------------------
 * QDockWidget
 */
QDockWidget {
    border: 1px solid white;
    titlebar-close-icon: url(:/qss/dock_close.png);
    titlebar-normal-icon: url(:/qss/dock_undock.png);
}

QDockWidget::title {
    text-align: left; /* align the text to the left */
    background: #705FA8;
    padding-left: 5px;
}

QDockWidget::close-button, QDockWidget::float-button {
    border: 1px solid transparent;
    background: transparent;/* 按钮背景色 */
    padding: 0px;
}

QDockWidget::close-button:hover, QDockWidget::float-button:hover {
    background: white;
}

QDockWidget::close-button:pressed, QDockWidget::float-button:pressed {
    padding: 1px -1px -1px 1px;
}



/*-----------------------------------------------------------------
 * QFrame
 * 直接影响QAbstractScrollArea, QLabel, QLCDNumber, QSplitter, QStackedWidget, and QToolBox及他们的子类
 */
/*QFrame, */QLabel, QToolTip {
    border: 1px none green;
    border-radius: 2px;
    padding: 1px;
    /*background-image: url(images/welcome.png);*/
    color: #FFFFE0
} 


/*---- QGroupBox
 * 
 */
QGroupBox {
    /*background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #E0E0E0, stop: 1 #FFFFFF);*/
    border: 2px solid green;
    border-radius: 5px;
    margin-top: 2ex; /* leave space at the top for the title */
}

QGroupBox::title {
    subcontrol-origin: margin;
    subcontrol-position: top center; /* position at the top center */
    padding: 0 3px;
    /*background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #FF0ECE, stop: 1 #FFFFFF);*/
}



/*-----------------------------------------------------------------
 * QHeaderView
 */
QHeaderView::section {
    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1,
                                      stop:0 #FFFFE0, stop: 0.5 #EEEED1, stop: 1.0 #CDCDB4);
    color: black;
    padding-left: 4px;
    border: 1px solid #6c6c6c;
    height: 20px;
}

QHeaderView::section:checked
{
    /* 选中元素对应行列header背景色 */
    background-color: #FFD700;
}

/* style the sort indicator */
QHeaderView::down-arrow {
    /* 这里暂时使用默认的,DIY的效果还没有默认的效果好 */
    /*image: url(:/qss/header_down_arrow.png);*/
}

QHeaderView::up-arrow {
    /*image: url(:/qss/header_up_arrow.png);*/
}


/*----QLineEdit
 */
QLineEdit {
    border: 1px solid white;
    border-radius: 5px;
    padding: 3px; /* 可以通过调整padding间接调整控件的高度 */
    background: #473C8B;
    selection-background-color: #1874CD;
}

QLineEdit[echoMode="2"] {
    lineedit-password-mask-delay: 1000;/* delay time in milliseconds */
    /* 例9679:大圆点; 9670:菱形; 9733:星形等*/
    lineedit-password-character: 9733;/* 密码显示的符号,这里使用的是符号对应的unicode十进制值 */
}

QLineEdit:read-only {
    background: gray;
}



/*---- QListView
 * QListView继承于QListView,所以仅设置QListView即可
 */
QListView {
    /* 选中某一条时是否选中整行还是仅内容 */
    show-decoration-selected: 1;
}

QListView::item:alternate {
    background: #EEEEEE;
}

QListView::item:selected {
    /* 选中内容的边框 */
    border: 1px solid #6a6ea9;
}

QListView::item:selected:!active {
background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                            stop: 0 #ABAFE5, stop: 1 #8588B2);
}

QListView::item:selected:active {
    background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #6a6ea9, stop: 1 #888dd9);
}

QListView::item:hover {
    background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                stop: 0 #DCDEF1, stop: 1 #DCDEF1);
    color: green
}


/*-----------------------------------------------------------------
 * QMenu
 */
   QMenu {
      background-color: #ABABAB; /* sets background of the menu */
      /* menu菜单被选中之后才显示出来的边框 */
      border: 1px solid black;
  }

  QMenu::item {
      /* sets background of menu item. set this to something non-transparent
          if you want menu color and menu item color to be different */
      background-color: gray;/*transparent;*/
  }

  QMenu::item:selected { /* when user selects item using mouse or keyboard */
      background-color: #654321;
  }
  
  /* 下面是QMenu的一些高级用法 */
    QMenu {
      background-color: white;
      margin: 2px; /* some spacing around the menu */
  }

  QMenu::item {
      padding: 2px 25px 2px 20px;
      border: 1px solid transparent; /* reserve space for selection border */
  }

  QMenu::item:selected {
      border-color: darkblue;
      background: rgba(100, 100, 100, 150);
  }

  QMenu::icon:checked { /* appearance of a 'checked' icon */
      background: gray;
      border: 1px inset gray;
      position: absolute;
      top: 1px;
      right: 1px;
      bottom: 1px;
      left: 1px;
  }

  QMenu::separator {
      height: 2px;
      background: lightblue;
      margin-left: 10px;
      margin-right: 5px;
  }

  QMenu::indicator {
      width: 13px;
      height: 13px;
  }
  
  
  
  
  /*-----------------------------------------------------------------
   * QMenuBar
   */
  QMenuBar {
      background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1,
                                        stop:0 lightgray, stop:1 darkgray);
  }

  QMenuBar::item {
      spacing: 3px; /* spacing between menu bar items */
      padding: 1px 4px;
      background: transparent;
      border-radius: 4px;
  }

  QMenuBar::item:selected { /* when selected using mouse or keyboard */
      background: #a8a8a8;
  }

  QMenuBar::item:pressed {
      background: #888888;
  }
  
  
  
  /*-----------------------------------------------------------------
   * QProgressBar
   * 如果QProgressBar其中一个subcontrols进行了customized,则其他所有的subcontrols都需要进行customize
   */
  QProgressBar {
      border: 2px solid grey;
      border-radius: 5px;
      text-align: center;/* 百分比文本所在的位置 */
  }

  QProgressBar::chunk {/* 进度条块 */
      background-color: pink;
      width: 8px;/* 块的宽度*/
      margin: 0.5px;/* 块与块之间的间隔 */
  }
  
  
  
  /*-----------------------------------------------------------------
   * QPushButton
   */
  QPushButton {
      border: 1px solid #8f8f91;
      padding: 2px 8px 2px 4px;/* top right bottom left */
      border-radius: 6px;
      /*background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                        stop: 0 #f6f7fa, stop: 1 #dadbde);*/
      /*min-width: 80px;*/
      min-height: 23px;
  }

  QPushButton:pressed {
      /*background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                        stop: 0 #dadbde, stop: 1 #f6f7fa);*/
      border-color: #CDC9C9 #ffffff #ffffff #CDC9C9;
      padding-top: 3px; /* 通过改变padding来突出按下的效果 */
      padding-left: 3px;
  }
  
  QPushButton:hover:!pressed {/* 这里需要!pressed, 否则按下的时候也是hover状态会异常 */
      border-color: #ffffff #CDC9C9 #CDC9C9 #ffffff;
      padding-top: 1px;
      padding-left: 1px; 
  }

  QPushButton:flat {
      border: none; /* no border for a flat push button */
  }

  QPushButton:default {
      border-color: navy; /* make the default button prominent */
  }
  
  /* 如果QPushButton有子菜单,则还可以对子菜单进行样式设置 */
    QPushButton:open { /* when the button has its menu open */
      background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                        stop: 0 #dadbde, stop: 1 #f6f7fa);
  }

  QPushButton::menu-indicator {
      image: url(menu_indicator.png);
      subcontrol-origin: padding;
      subcontrol-position: bottom right;
  }

  QPushButton::menu-indicator:pressed, QPushButton::menu-indicator:open {
      position: relative;
      top: 2px; left: 2px; /* shift the arrow by 2 px */
  }
  
  
  
  
  
  /*-----------------------------------------------------------------
   * QRadioButton
   */
  QRadioButton::indicator {
      width: 20px;
      height: 20px;
  }

  QRadioButton::indicator::unchecked {
      image: url(:/qss/radiobutton_unchecked.png);
  }

  QRadioButton::indicator:unchecked:hover {
      image: url(:/qss/radiobutton_unchecked_hover.png);
  }

  QRadioButton::indicator:unchecked:pressed {
      image: url(:/qss/radiobutton_unchecked_pressed.png);
  }

  QRadioButton::indicator::checked {
      image: url(:/qss/radiobutton_checked.png);
  }

  QRadioButton::indicator:checked:hover {
      image: url(:/qss/radiobutton_checked_hover.png);
  }

  QRadioButton::indicator:checked:pressed {
      image: url(:/qss/radiobutton_checked_pressed.png);
  }
  
  
  
  
  /*-----------------------------------------------------------------
   * QScrollBar
   */
  /* 水平方向的滚动条 */  
  QScrollBar:horizontal {
      border: 2px solid grey;
      background: #FFE4C4;
      height: 15px;
      margin: 0px 20px 0 20px;
  }
  
  /* 设置handle */
  QScrollBar::handle:horizontal {
      background: #FFD700;
      min-width: 20px;
  }
  QScrollBar::add-line:horizontal {
      border: 2px solid grey;
      background: #32CC99;
      width: 20px;
      subcontrol-position: right;
      subcontrol-origin: margin;
  }

  QScrollBar::sub-line:horizontal {
      border: 2px solid grey;
      background: #32CC99;
      width: 20px;
      subcontrol-position: left;
      subcontrol-origin: margin;
  }
  
 QScrollBar:left-arrow:horizontal, QScrollBar::right-arrow:horizontal {
      border: 2px solid grey;
      width: 3px;
      height: 3px;
      background: white;
  }

  QScrollBar::add-page:horizontal, QScrollBar::sub-page:horizontal {
      background: none;
  }
  
  /* 下面使默认的左右/上下两个滚动按钮在同一边的设置  */
/*  QScrollBar:horizontal {
      border: 2px solid green;
      background: cyan;
      height: 15px;
      margin: 0px 40px 0 0px;
  }

  QScrollBar::handle:horizontal {
      background: gray;
      min-width: 20px;
  }

  QScrollBar::add-line:horizontal {
      background: blue;
      width: 16px;
      subcontrol-position: right;
      subcontrol-origin: margin;
      border: 2px solid black;
  }

  QScrollBar::sub-line:horizontal {
      background: magenta;
      width: 16px;
      subcontrol-position: top right;
      subcontrol-origin: margin;
      border: 2px solid black;
      position: absolute;
      right: 20px;
  }

  QScrollBar:left-arrow:horizontal, QScrollBar::right-arrow:horizontal {
      width: 3px;
      height: 3px;
      background: pink;
  }

  QScrollBar::add-page:horizontal, QScrollBar::sub-page:horizontal {
      background: none;
  }*/
  
  
  
  
  /*-----------------------------------------------------------------
   * QSlider
   */
   QSlider::groove:horizontal {
      border: 1px solid #999999;
      height: 8px; /* the groove expands to the size of the slider by default. by giving it a height, it has a fixed size */
      background: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #B1B1B1, stop:1 #c4c4c4);
      margin: 2px 0;
  }

  QSlider::handle:horizontal {
      background: qlineargradient(x1:0, y1:0, x2:1, y2:1, stop:0 #b4b4b4, stop:1 #8f8f8f);
      border: 1px solid #5c5c5c;
      width: 18px;
      margin: -2px 0; /* handle is placed by default on the contents rect of the groove. Expand outside the groove */
      border-radius: 3px;
  }
  
  /* 下面是对handle前后/上下部分的颜色进行区分设置,比如水平QSlider */
  QSlider::groove:horizontal {
      background: red;
      position: absolute; /* absolutely position 4px from the left and right of the widget. setting margins on the widget should work too... */
      left: 4px; right: 4px;
  }

  QSlider::handle:horizontal {
      height: 10px;
      background: green;
      margin: 0 -4px; /* expand outside the groove */
  }

  QSlider::add-page:horizontal {
      background: white;
  }

  QSlider::sub-page:horizontal {
      background: pink;
  }
  
  
  
  /*-----------------------------------------------------------------
   * QSplitter
   */
   QSplitter::handle {
/*      image: url(:/qss/splitter.png);*/
  }

  QSplitter::handle:horizontal {
      width: 2px;
  }

  QSplitter::handle:vertical {
      height: 2px;
  }

  QSplitter::handle:pressed {
/*      image: url(:/qss/splitter_pressed.png);*/
  }
  
  
  
  
  /*-----------------------------------------------------------------
   * QStatusBar
   */
  QStatusBar {
      background: #191970;
  }

  QStatusBar::item {
      border: 1px solid red;
      border-radius: 3px;
  }
  
  QStatusBar QLabel {
      border: 3px solid black;
  }
  
  
  
  
/*-----------------------------------------------------------------
 * QTabWidget QTabBar
 */
  /* QTabWidget内容区(除了tabBar外的区域) */  
  QTabWidget::pane { /* The tab widget frame */
      /*border: 4px solid red;*/
      position: absolute;
      top: -1em; /* 结合position使边线穿过tabBar的中心 */
  }

  QTabWidget::tab-bar {
      /*left: 25px;*/ /* move to the right by 5px */
      alignment: center; /* 使tab-bar处于水平方向中心位置 */
  }

  /* Style the tab using the tab sub-control. Note that
      it reads QTabBar _not_ QTabWidget */
  QTabBar::tab {
      background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                  stop: 0 #696969, stop: 0.4 #4F4F4F,
                                  stop: 0.5 #4F4F4F, stop: 1.0 #363636);
      border: 2px solid #363636;
      border-bottom-color: #363636; /* same as the pane color */
      border-top-left-radius: 4px;
      border-top-right-radius: 4px;
      min-width: 18ex;
      padding: 2px;
  }

  QTabBar::tab:selected, QTabBar::tab:hover {
      background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                  stop: 0 #A4D3EE, stop: 0.4 #8DB6CD,
                                  stop: 0.5 #8DB6CD, stop: 1.0 #607B8B);
  }

  QTabBar::tab:selected {
      border-color: white;
      border-bottom-color: #C2C7CB; /* same as pane color */
  }

  QTabBar::tab:!selected {
      margin-top: 2px; /* make non-selected tabs look smaller */
  }
  
  


 /*-----------------------------------------------------------------
  * QTableView
  */
  QTableView {
      selection-background-color: qlineargradient(x1: 0, y1: 0, x2: 0.5, y2: 0.5,
                                  stop: 0 blue, stop: 1 #009ACD);
  }
  
  QTableView QTableCornerButton::section {
      background: red;
      border: 2px outset red;
  }
  
  QTableView::indicator:unchecked {
      background-color: #d7d6d5
  }
  
  
  
  
  /*-----------------------------------------------------------------
   * QToolBar 工具栏
   */
  QToolBar {
/*      background: yellow;*/
      spacing: 3px; /* spacing between items in the tool bar */
  }

  /* 拖动工具栏的那个部件,默认是3个竖点.还是默认的好看 */
  QToolBar::handle {
/*      image: url(handle.png);*/
  }
  
  
  
  /*-----------------------------------------------------------------
   * QToolBox
   */
  QToolBox::tab {
      background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                  stop: 0 #E1E1E1, stop: 0.4 #DDDDDD,
                                  stop: 0.5 #D8D8D8, stop: 1.0 #D3D3D3);
      border-radius: 5px;
      color: black;/* 上方文字的颜色 */
  }

  QToolBox::tab:selected { /* italicize selected tabs */
      font: italic;
      color: yellow;
  }
  
  
  
  /*-----------------------------------------------------------------
   * QTreeView
   */
  QTreeView {
      show-decoration-selected: 1;
  }

  QTreeView::item {/* 具体内容 */
/*      border: 1px solid #d9d9d9;*/默认不显示边线效果还好一点
      border-top-color: transparent;
      border-bottom-color: transparent;
  }

  QTreeView::item:hover {
      background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #838B83, stop: 1 #C1CDC1);
      border: 1px solid #bfcde4;
  }

  QTreeView::item:selected {
      border: 1px solid #567dbc;
  }

  QTreeView::item:selected:active{
      background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #6ea1f1, stop: 1 #567dbc);
  }

  QTreeView::item:selected:!active {
      background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #6b9be8, stop: 1 #577fbf);
  }
  /* 还能够对QTreeView的branch进行更细致的格式设置,详见QT style sheet reference */
  
  